<?xml version="1.0" encoding="UTF-8"?>
<project name="com.ibm.watson.safari.feature" default="build.feature.jar" basedir=".">
	<import file="../com.ibm.watson.safari.feature/buildCommon.xml"/>

	<!-- RMF 8/12/2005 - I don't guarantee that any targets other than those invoked from
	     build.feature.jar (the default) actually work properly. -->

	<!-- RMF 8/12/2005 - N.B.: The targets all.plugins and gather.plugin.jars include a
	     hard-wired list of plugins to include.
	     I don't know how to derive this from the contents of feature.xml at the moment. -->

	<!-- RMF 8/12/2005 - The gather.plugin.jars target collects all necessary jars into the
	     "plugins" directory, where the exportUpdate script can find them, so that it need
	     not know what jars they are (exportUpdate only knows what features it contains). -->

	<target name="init">
		<property name="feature.name"        value="${safari.feature(id)}"/>
		<property name="feature.version"     value="${safari.version}"/>
		<property name="feature.temp.folder" value="${basedir}/feature.temp.folder"/>
		<property name="feature.destination" value="${basedir}"/>
	</target>

	<target name="all.plugins"
		depends="build.pde.core,build.shrike,build.safari,build.smapi,build.smapifier,build.uide.runtime,build.uide,build.safari.cheatsheets,build.jikespg,build.jikespg.uide,build.polyglot2,build.pe,build.x10.common,build.x10.runtime,build.x10.compiler,build.x10.uide,build.safari.x10">
	</target>

	<target name="build.feature.jar" depends="init" description="Build the feature jar for SAFARI for an update site.">
		<property name="feature.base" value="${feature.temp.folder}"/>
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="gather.bin.parts" inheritAll="false">
			<param name="arch" value="ia64,ia64_32,PA_RISC,ppc,sparc,x86,x86_64"/>
			<param name="ws" value="carbon,gtk,motif,photon,win32"/>
			<param name="nl" value="*"/>
			<param name="os" value="aix,hpux,linux,macosx,qnx,solaris,win32"/>
			<param name="feature.base" value="${feature.temp.folder}"/>
		</antcall>
		<jar destfile="${feature.destination}/${feature.name}_${feature.version}.jar" basedir="${feature.temp.folder}/features/${feature.name}_${feature.version}"/>
		<delete dir="${feature.temp.folder}"/>
		<antcall target="gather.plugin.jars"/>
		<echo message="Feature jar build complete."/>
	</target>

	<target name="gather.bin.parts" depends="init" if="feature.base">
		<mkdir dir="${feature.base}/features/${feature.name}_${feature.version}"/>
		<copy todir="${feature.base}/features/${feature.name}_${feature.version}" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="feature.xml"/>
		</copy>
	</target>

	<!-- RMF Copy the plugin jars to the 'plugins' folder so that exportUpdate script can see it -->
	<target name="gather.plugin.jars" depends="all.plugins">
		<delete failonerror="false">
			<fileset dir="plugins" includes="*.jar"/>
		</delete>
		<mkdir dir="plugins"/>
		<copy tofile="plugins/com.ibm.shrike_1.0.0.jar" file="../com.ibm.shrike/com.ibm.shrike_${feature.version}.jar"/>
		<copy todir="plugins" file="../com.ibm.watson.safari/com.ibm.watson.safari_${feature.version}.jar"/>
		<copy todir="plugins" file="../com.ibm.watson.smapi/com.ibm.watson.smapi_${feature.version}.jar"/>
		<copy todir="plugins" file="../com.ibm.watson.smapifier/com.ibm.watson.smapifier_${feature.version}.jar"/>
		<copy todir="plugins" file="../org.eclipse.uide.runtime/org.eclipse.uide.runtime_${feature.version}.jar"/>
		<copy todir="plugins" file="../org.eclipse.uide/org.eclipse.uide_${feature.version}.jar"/>
		<copy todir="plugins" file="../com.ibm.watson.safari.cheatsheets/com.ibm.watson.safari.cheatsheets_${feature.version}.jar"/>
		<copy todir="plugins" file="../lpg/lpg_${feature.version}.jar"/>
		<copy todir="plugins" file="../org.jikespg.uide/org.jikespg.uide_${feature.version}.jar"/>
		<copy todir="plugins" file="../polyglot2/polyglot2_${feature.version}.jar"/>
		<copy todir="plugins" file="../pe/pe_${feature.version}.jar"/>
		<copy todir="plugins" file="../x10.common/x10.common_${feature.version}.jar"/>
		<copy todir="plugins" file="../x10.runtime/x10.runtime_${feature.version}.jar"/>
		<copy todir="plugins" file="../x10.compiler/x10.compiler_${feature.version}.jar"/>
		<copy todir="plugins" file="../x10.uide/x10.uide_${feature.version}.jar"/>
		<copy todir="plugins" file="../com.ibm.watson.safari.x10/com.ibm.watson.safari.x10_${feature.version}.jar"/>
		<copy todir="plugins" file="../org.eclipse.pde.core/org.eclipse.pde.core_3.1.2.watson3.jar"/>
	</target>

	<!-- ========================================================================================= -->

	<target name="build.safari">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.watson.safari"/>
		</antcall>
	</target>

	<target name="build.shrike">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.shrike"/>
		</antcall>
	</target>

	<target name="build.smapi">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.watson.smapi"/>
		</antcall>
	</target>

	<target name="build.smapifier" depends="build.smapi">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.watson.smapifier"/>
		</antcall>
	</target>

	<target name="build.uide.runtime" depends="build.smapi">
		<antcall target="build.child">
			<param name="plugin.id" value="org.eclipse.uide.runtime"/>
		</antcall>
	</target>

	<target name="build.uide" depends="build.uide.runtime">
		<antcall target="build.child">
			<param name="plugin.id" value="org.eclipse.uide"/>
		</antcall>
	</target>

	<target name="build.safari.cheatsheets" depends="build.uide,build.jikespg.uide">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.watson.safari.cheatsheets"/>
		</antcall>
	</target>

	<target name="build.jikespg">
		<antcall target="build.child">
			<param name="plugin.id" value="lpg"/>
		</antcall>
	</target>

	<target name="build.jikespg.uide" depends="build.jikespg,build.uide.runtime,build.uide">
		<antcall target="build.child">
			<param name="plugin.id" value="org.jikespg.uide"/>
		</antcall>
	</target>

	<target name="build.polyglot2">
		<antcall target="build.child">
			<param name="plugin.id" value="polyglot2"/>
		</antcall>
	</target>

	<target name="build.pe">
		<antcall target="build.child">
			<param name="plugin.id" value="pe"/>
		</antcall>
	</target>

	<target name="build.x10.common">
		<antcall target="build.child">
			<param name="plugin.id" value="x10.common"/>
		</antcall>
	</target>

	<target name="build.x10.runtime" depends="build.pe">
		<antcall target="build.child">
			<param name="plugin.id" value="x10.runtime"/>
		</antcall>
	</target>

	<target name="build.x10.compiler" depends="build.polyglot2,build.jikespg">
		<antcall target="build.child">
			<param name="plugin.id" value="x10.compiler"/>
		</antcall>
	</target>

	<target name="build.x10.uide" depends="build.x10.compiler,build.uide.runtime">
		<antcall target="build.child">
			<param name="plugin.id" value="x10.uide"/>
		</antcall>
	</target>

	<target name="build.safari.x10" depends="build.x10.compiler,build.uide.runtime">
		<antcall target="build.child">
			<param name="plugin.id" value="com.ibm.watson.safari.x10"/>
		</antcall>
	</target>

	<target name="build.pde.core">
		<ant antfile="../org.eclipse.pde.core/build.xml" dir="../org.eclipse.pde.core" target="build.update.jar"/>
	</target>

	<!-- ========================================================================================= -->

	<target name="build.child">
		<ant antfile="../${plugin.id}/exportPlugin.xml" dir="../${plugin.id}" target="build.update.jar"/>
	</target>

	<!-- ========================================================================================= -->

	<target name="zip.distribution" depends="init" description="Create a zip containing all the plug-ins and features for the feature: ${feature.name}.">
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="gather.bin.parts">
			<param name="arch" value="ia64,ia64_32,PA_RISC,ppc,sparc,x86,x86_64"/>
			<param name="ws" value="carbon,gtk,motif,photon,win32"/>
			<param name="nl" value="*"/>
			<param name="include.children" value="true"/>
			<param name="feature.base" value="${feature.temp.folder}"/>
			<param name="os" value="aix,hpux,linux,macosx,qnx,solaris,win32"/>
		</antcall>
		<zip destfile="${feature.destination}/${feature.name}_${feature.version}.bin.dist.zip" basedir="${feature.temp.folder}" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${feature.temp.folder}"/>
	</target>

	<target name="zip.sources" depends="init">
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="all.children">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins/${feature.name}.source_${feature.version}/src"/>
			<param name="include.children" value="true"/>
			<param name="target" value="gather.sources"/>
		</antcall>
		<zip destfile="${feature.destination}/${feature.name}_${feature.version}.src.zip" basedir="${feature.temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${feature.temp.folder}"/>
	</target>

	<target name="zip.logs" depends="init">
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="all.children" inheritAll="false">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins"/>
			<param name="include.children" value="true"/>
			<param name="target" value="gather.logs"/>
		</antcall>
		<zip destfile="${feature.destination}/${feature.name}_${feature.version}.log.zip" basedir="${feature.temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${feature.temp.folder}"/>
	</target>

	<target name="clean" depends="init" description="Clean the feature: ${feature.name} of all the zips, jars and logs created.">
		<delete file="${feature.destination}/${feature.name}_${feature.version}.jar"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.bin.dist.zip"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.log.zip"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.src.zip"/>
		<delete dir="${feature.temp.folder}"/>
		<antcall target="all.children">
			<param name="target" value="clean"/>
		</antcall>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="E:/RMF/Eclipse/Workspaces/safari/${feature.name}/" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
		<antcall target="all.children">
			<param name="target" value="refresh"/>
		</antcall>
	</target>
	<target name="gather.sources">
		<antcall target="children">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins/${feature.name}.source_${feature.version}/src"/>
			<param name="target" value="gather.sources"/>
		</antcall>
	</target>

	<target name="gather.logs" depends="init">
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="all.children" inheritAll="false">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins"/>
			<param name="target" value="gather.logs"/>
		</antcall>
	</target>
</project>
